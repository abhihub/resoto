name: Build Docker Images

on:
  push:
  pull_request:
    paths:
      - "Dockerfile"
      - "docker/**"
      - "dockerV2/**"
      - ".github/workflows/docker-build.yml"
  workflow_dispatch:

jobs:

  split-build:
    name: Build split Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get short commit SHA
        id: sha
        run: echo "::set-output name=short::${GITHUB_SHA::7}"


      - name: Set build platforms
        id: platform
        run: |
          GITHUB_REF="${{ github.ref }}"
          GITHUB_TAG=${GITHUB_REF##*/}
          echo "::set-output name=targets::linux/arm64"
          echo "::set-output name=uitag::edge"
          echo "::set-output name=latest::false"

      - name: Check short commit SHA and build targets
        run: |
          echo ${{ steps.sha.outputs.short }}
          echo ${{ steps.platform.outputs.targets }}
          echo ${{ steps.platform.outputs.uitag }}
          echo ${{ steps.platform.outputs.latest }}

      - name: Docker resotobase meta
        id: basemeta
        uses: docker/metadata-action@v3
        with:
          images: |
            someengineering/resotobase
            ghcr.io/someengineering/resotobase
          flavor: |
            latest=${{ steps.platform.outputs.latest }}
          tags: |
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{major}}
            type=sha,prefix=
            type=edge
          labels: |
            org.opencontainers.image.title=resotobase
            org.opencontainers.image.description=Resoto base image
            org.opencontainers.image.vendor=Some Engineering Inc.


      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push resotobase Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.resotobase
          platforms: ${{ steps.platform.outputs.targets }}
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            UI_IMAGE_TAG=${{ steps.platform.outputs.uitag }}
            SOURCE_COMMIT=${{ github.sha }}
            TESTS=false
          tags: ${{ steps.basemeta.outputs.tags }}
          labels: ${{ steps.basemeta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

